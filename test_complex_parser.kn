// Complex test file to verify hybrid parser routing
// This should trigger the hybrid parser due to complex features

// Simple variables
x = 10
y = 20

// Variable with string interpolation (should trigger hybrid parser)
greeting = "Hello, {name}!"
status = "Result: {x + y}"

// Function with case expression (should trigger hybrid parser)
classify_number(n) {
    case n {
        0 -> "zero"
        1 -> "one"
        _ -> "other"
    }
}

// Function with when expression
get_grade(score) {
    when score {
        >= 90 -> "A"
        >= 80 -> "B"
        >= 70 -> "C"
        _ -> "F"
    }
}

// Variable with ternary operator
max_value = x > y ? x : y

// Function with lambda and pipeline
process_numbers() {
    numbers = [1, 2, 3, 4, 5]

    result = numbers
        |> map(|x| x * 2)
        |> filter(|x| x > 5)

    result
}

// Variable with constructor expression
user_id = UserId(id: 12345)

// Function with block expression containing statements
complex_calculation() {
    base = {
        a = 10
        b = 20
        a + b
    }

    multiplier = base * 2
    multiplier + 5
}

// Main function
main() {
    simple_result = x + y
    class_result = classify_number(1)
    grade_result = get_grade(85)
    process_result = process_numbers()
    complex_result = complex_calculation()

    simple_result + complex_result
}
