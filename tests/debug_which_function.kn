// Minimal test to isolate which specific function causes the verifier error
// This will help us identify the exact source of the "Failed to define function: Verifier errors"

// Simple product type
type User = User(id: Int, name: String)

// Union type with Float fields
type Shape = Circle(radius: Float) | Rectangle(width: Float, height: Float)

// Test 1: Function that only returns integers (should work)
simple_function(): Int = {
    42
}

// Test 2: Function that creates product type with no field access (should work)
create_user(): User = {
    User(id: 1, name: "Alice")
}

// Test 3: Function that creates union type with integer (should work based on previous tests)
create_circle_int(): Shape = {
    Circle(radius: 5)
}

// Test 4: Function that creates union type with float literal (this might cause verifier error!)
create_circle_float(): Shape = {
    Circle(radius: 5.0)
}

// Test 5: Function with field access returning User (this might cause verifier error!)
update_user_with_field(user: User): User = {
    User(id: user.id, name: "Updated")
}

// Test 6: Function with live parameter and field access (this might cause verifier error!)
update_user_live(live user: User): User = {
    User(id: user.id, name: "Live")
}

// Global variables to test if they cause issues
alice: User = User(id: 1, name: "Alice")

// Global with simple union constructor
circle_simple: Shape = Circle(radius: 3)

// Global with float literal union constructor (this might cause verifier error!)
circle_float: Shape = Circle(radius: 3.0)

// Main function - test each function individually
main(): Int = {
    // Test 1: Simple function (should always work)
    result1 = simple_function()

    // Test 2: Product type creation (should work)
    user = create_user()

    // Test 3: Union with integer (should work)
    circle_int = create_circle_int()

    // Test 4: Union with float literal (might fail here!)
    circle_float_result = create_circle_float()

    // Test 5: Field access in constructor (might fail here!)
    updated_user = update_user_with_field(alice)

    // Test 6: Live parameter with field access (might fail here!)
    live_user = update_user_live(alice)

    // Return success
    result1
}
